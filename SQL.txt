--create DATABASE TPI_DATOS
--GO
--USE TPI_DATOS
--GO

---ENUNCIADO 1.- Sistema Acad√©mico de las Tecnicaturas de la UTN FRC

CREATE TABLE PROVINCIAS
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	NOMBRE VARCHAR(50) NOT NULL
);

CREATE TABLE LOCALIDADES
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	NOMBRE VARCHAR(50) NOT NULL,
	PROVINCIA INT
	CONSTRAINT FK_PROVINCIA FOREIGN KEY(PROVINCIA)
		REFERENCES PROVINCIAS(ID)
);

CREATE TABLE TIPOS_DOC
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TIPO_DOC VARCHAR(50) NOT NULL
);

CREATE TABLE SITUACION_LABORAL
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	SITUACION_LAB VARCHAR(50) NOT NULL
);

CREATE TABLE ESTADOS_MATERIAS
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	ESTADO_MATERIA VARCHAR(50) NOT NULL
);

CREATE TABLE ESTADOS_EXAMENES
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	ESTADO_EXAMEN VARCHAR(50) NOT NULL
);

CREATE TABLE ESTADO_CIVIL
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	ESTADO_CIVIL VARCHAR(50) NOT NULL
);

CREATE TABLE ESTADO_HABITACIONAL
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	ESTADO_HABITACIONAL VARCHAR(50)  NOT NULL
);

CREATE TABLE CARRERAS
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	CARRERA VARCHAR(100) NOT NULL,
	ANIO_PLAN INT
);

CREATE TABLE TIPOS_MATERIAS
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TIPO_MATERIA VARCHAR(50) NOT NULL
);

CREATE TABLE MATERIAS
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	MATERIA VARCHAR(50) NOT NULL,
	TIPO_MATERIA INT
	CONSTRAINT FK_TIPO_MATERIA FOREIGN KEY (TIPO_MATERIA)
		REFERENCES TIPOS_MATERIAS(ID),
);

CREATE TABLE TURNOS
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TURNO VARCHAR(50) NOT NULL
);

CREATE TABLE CURSOS
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	CURSO VARCHAR(50) NOT NULL,
	TURNO INT
	CONSTRAINT FK_TURNO FOREIGN KEY (TURNO)
		REFERENCES TURNOS(ID),
);

CREATE TABLE GENEROS
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	GENERO VARCHAR(50)
);

CREATE TABLE ALUMNOS
(
	LEGAJO INT PRIMARY KEY NOT NULL,
	NOMBRE VARCHAR (100) NOT NULL,
	APELLIDO VARCHAR(100) NOT NULL,
	TIPO_DOC INT NOT NULL,
	NRO_DOC INT NOT NULL,
	DIRECCION VARCHAR(100),
	LOCALIDAD INT,
	ESTADO_CIVIL INT,
	ESTADO_HABIT INT,
	SITUAC_LAB INT,
	FECHA_NAC DATETIME,
	GENERO INT,
	FECHA_ALTA DATETIME NOT NULL,
	FECHA_BAJA DATETIME
	CONSTRAINT FK_TIPO_DOC_AL FOREIGN KEY (TIPO_DOC)
		REFERENCES TIPOS_DOC(ID),
	CONSTRAINT FK_LOCALIDAD_AL FOREIGN KEY (LOCALIDAD)
		REFERENCES LOCALIDADES (ID),
	CONSTRAINT FK_ESTADO_CIVIL_AL FOREIGN KEY (ESTADO_CIVIL)
		REFERENCES ESTADO_CIVIL (ID),
	CONSTRAINT FK_ESTADO_HABIT_AL FOREIGN KEY(ESTADO_HABIT)
		REFERENCES ESTADO_HABITACIONAL (ID),
	CONSTRAINT FK_SITUAC_LAB_AL FOREIGN KEY (SITUAC_LAB)
		REFERENCES SITUACION_LABORAL(ID),
	CONSTRAINT FK_GENERO_AL FOREIGN KEY (GENERO)
		REFERENCES GENEROS(ID)
);

CREATE TABLE DOCENTES
(
	LEGAJO INT PRIMARY KEY NOT NULL,
	NOMBRE VARCHAR (100) NOT NULL,
	APELLIDO VARCHAR(100) NOT NULL,
	TIPO_DOC INT,
	NRO_DOC INT NOT NULL,
	DIRECCION VARCHAR(100),
	LOCALIDAD INT,
	ESTADO_CIVIL INT,
	ESTADO_HABIT INT,
	SITUAC_LAB INT,
	FECHA_NAC DATETIME,
	TITULO_UNIVERSITARIO VARCHAR(100),
	GENERO INT,
	FECHA_ALTA DATETIME NOT NULL,
	FECHA_BAJA DATETIME
	CONSTRAINT FK_TIPO_DOC_DOC FOREIGN KEY (TIPO_DOC)
		REFERENCES TIPOS_DOC(ID),
	CONSTRAINT FK_LOCALIDAD_DOC FOREIGN KEY (LOCALIDAD)
		REFERENCES LOCALIDADES (ID),
	CONSTRAINT FK_ESTADO_CIVIL_DOC FOREIGN KEY (ESTADO_CIVIL)
		REFERENCES ESTADO_CIVIL (ID),
	CONSTRAINT FK_GENERO_DOC FOREIGN KEY (GENERO)
		REFERENCES GENEROS (ID)
);

CREATE TABLE TIPOS_CONTACTO 
(
    ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    TIPO VARCHAR(50) NOT NULL
);

CREATE TABLE CONTACTOS 
(
    ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    TIPO_CONTACTO INT NOT NULL,
    LEGAJO_ALUMNO INT,
	LEGAJO_DOCENTE INT,
    CONTACTO VARCHAR(150)
    CONSTRAINT FK_CONTACTOS_TIPO_CONTACTO FOREIGN KEY (TIPO_CONTACTO) REFERENCES TIPOS_CONTACTO(ID),
    CONSTRAINT FK_CONTACTOS_ALUMNOS FOREIGN KEY (LEGAJO_ALUMNO) REFERENCES ALUMNOS(LEGAJO),
	CONSTRAINT FK_CONTACTOS_DOCENTES FOREIGN KEY (LEGAJO_DOCENTE) REFERENCES DOCENTES(LEGAJO)
);

CREATE TABLE MATERIASXCARRERAS
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	CARRERA INT NOT NULL,
	MATERIA INT NOT NULL,
	DOCENTE_A_CARGO INT
	CONSTRAINT FK_CARRERA FOREIGN KEY(CARRERA)
		REFERENCES CARRERAS(ID),
	CONSTRAINT FK_MATERIA FOREIGN KEY(MATERIA)
		REFERENCES MATERIAS(ID),
	CONSTRAINT FK_DOCENTE_A_CARGO FOREIGN KEY (DOCENTE_A_CARGO)
		REFERENCES DOCENTES(LEGAJO)
);

CREATE TABLE INSCRIPCION_A_CARRERAS
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	FECHA DATE NOT NULL,
	ALUMNO INT NOT NULL,
	CARRERA INT NOT NULL,
	CONSTRAINT FK_ALUMNO_CARR FOREIGN KEY(ALUMNO)
		REFERENCES ALUMNOS (LEGAJO),
	CONSTRAINT FK_CARRERA_INSC FOREIGN KEY(CARRERA)
		REFERENCES CARRERAS(ID)
);


CREATE TABLE INSCRIPCION_A_CURSADO
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	FECHA DATE NOT NULL,
	ALUMNO INT NOT NULL,
	INSCRIP_CARRER INT NOT NULL
	CONSTRAINT FK_ALUMNO_MAT FOREIGN KEY (ALUMNO)
		REFERENCES ALUMNOS (LEGAJO),
	CONSTRAINT FK_INSCRIP_CARRER FOREIGN KEY (INSCRIP_CARRER)
		REFERENCES INSCRIPCION_A_CARRERAS(ID)
);

CREATE TABLE MATERIAS_X_CURSADO
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	MATERIAXCARRERA INT NOT NULL,
	INSCRIP_CURSADO INT
	CONSTRAINT FK_MATERIAXCARR FOREIGN KEY (MATERIAXCARRERA)
		REFERENCES MATERIASXCARRERAS(ID),
	CONSTRAINT INSCRIP_CURSADO FOREIGN KEY (INSCRIP_CURSADO)
		REFERENCES INSCRIPCION_A_CURSADO(ID)
)

CREATE TABLE TIPOS_EXAMEN
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TIPO_EXAMEN VARCHAR(50) NOT NULL
);

CREATE TABLE CURSADAS
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	FECHA DATE,
	MATERIA_CURSADA INT NOT NULL,
	ESTADO_MATERIA INT NOT NULL,
	CURSO INT NOT NULL
	CONSTRAINT FK_MAT_CURSADA FOREIGN KEY (MATERIA_CURSADA)
		REFERENCES MATERIAS_X_CURSADO (ID),
	CONSTRAINT FK_ESTADO_MATERIA FOREIGN KEY (ESTADO_MATERIA)
		REFERENCES ESTADOS_MATERIAS(ID),
	CONSTRAINT FK_CURSO FOREIGN KEY(CURSO)
		REFERENCES CURSOS(ID)
);


CREATE TABLE INSCRIPCION_EXAMENES_FINAL
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	FECHA DATE NOT NULL,
	HORA TIME NOT NULL,
	CURSADA INT NOT NULL,
	CODIGO VARCHAR(10)
	CONSTRAINT FK_MATERIA_CURSADA_FINAL FOREIGN KEY (CURSADA)
		REFERENCES CURSADAS (ID)
);

CREATE TABLE TRIBUNALES
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	MATERIA INT NOT NULL,
	FECHA DATE,
	AULA VARCHAR(50)
	CONSTRAINT FK_MATERIA_TRIB FOREIGN KEY (MATERIA)
		REFERENCES MATERIASXCARRERAS (ID)
);

CREATE TABLE DOCENTES_X_TRIBUNALES
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	DOCENTE INT NOT NULL,
	TRIBUNAL INT NOT NULL
	CONSTRAINT FK_DOCENTE FOREIGN KEY (DOCENTE)
		REFERENCES DOCENTES(LEGAJO),
	CONSTRAINT FK_TRIBUNALES FOREIGN KEY (TRIBUNAL)
		REFERENCES TRIBUNALES (ID)
);

CREATE TABLE EXAMENES
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	NOTA INT NOT NULL,
	ESTADO_EXAMEN INT NOT NULL,
	TIPO_EXAMEN INT NOT NULL,
	INSCRIP_FINAL INT,
	TRIBUNAL INT
	CONSTRAINT FK_ESTADO_EXAMEN FOREIGN KEY(ESTADO_EXAMEN)
		REFERENCES ESTADOS_EXAMENES(ID),
	CONSTRAINT FK_TIPO_EXAMEN FOREIGN KEY (TIPO_EXAMEN)
		REFERENCES TIPOS_EXAMEN(ID),
	CONSTRAINT FK_INSCRIP_FINAL FOREIGN KEY (INSCRIP_FINAL)
		REFERENCES INSCRIPCION_EXAMENES_FINAL(ID),
	CONSTRAINT FK_DOC_X_TRIB FOREIGN KEY (TRIBUNAL)
		REFERENCES DOCENTES_X_TRIBUNALES (ID)
);

CREATE TABLE EXAMENES_X_CURSADA
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	CURSADA INT NOT NULL,
	EXAMEN INT NOT NULL
	CONSTRAINT FK_CURSADA FOREIGN KEY (CURSADA)
		REFERENCES CURSADAS(ID),
	CONSTRAINT FK_EXAMEN FOREIGN KEY (EXAMEN)
		REFERENCES EXAMENES (ID)
);


----------------------------------------------------------------------------INSERTS----------------------------------------------------------------------------

SET DATEFORMAT DMY;

-- PROVINCIAS
INSERT INTO PROVINCIAS (NOMBRE) VALUES 
    ('CORDOBA'), 
    ('BUENOS AIRES'), 
    ('SANTA FE'),
    ('CORRIENTES'),
    ('LA PAMPA'),
    ('MENDOZA'),
    ('ENTRE RIOS'),
    ('SAN LUIS');

-- LOCALIDADES
INSERT INTO LOCALIDADES (NOMBRE, PROVINCIA) VALUES 
    ('CORDOBA CAPITAL', 1), 
    ('VILLA MARIA', 1), 
    ('ROSARIO', 3), 
    ('LA PLATA', 2), 
    ('MENDOZA CAPITAL', 6),
    ('VILLA ALLENDE', 1),
    ('PALERMO', 2),
    ('CONCORDIA', 7),
    ('SAN LUIS CAPITAL', 8),
    ('MERLO', 8);

-- TIPOS_DOC
INSERT INTO TIPOS_DOC (TIPO_DOC) VALUES 
    ('DNI'), 
    ('L.C'), 
    ('L.E'), 
    ('DU'),
    ('PASAPORTE');

--TIPOS_CONTACTO
INSERT INTO TIPOS_CONTACTO VALUES('CELULAR PERSONAL'),
								('TELEFON FIJO'),
								('CELULAR LABORAL'),
								('EMAIL PERSONAL'), 
								('EMAIL LABORAL')

-- SITUACION_LABORAL
INSERT INTO SITUACION_LABORAL (SITUACION_LAB) VALUES 
    ('EMPLEADO'), 
    ('DESEMPLEADO'), 
    ('ESTUDIANTE'), 
    ('MONOTRIBUTISTA'), 
    ('FREELANCER'),
    ('AUTONOMO');

	--ESTADO_HABAITACIONAL
INSERT INTO ESTADO_HABITACIONAL (ESTADO_HABITACIONAL) 
							VALUES ('ALQUILA'), 
									('VIVIENDA PROPIA'), 
									('OTRO');


-- ESTADOS_MATERIAS
INSERT INTO ESTADOS_MATERIAS (ESTADO_MATERIA) VALUES 
    ('REGULAR'), 
    ('PROMOCIONAL'), 
    ('LIBRE'),
    ('EXONERADO');

-- ESTADOS_EXAMENES
INSERT INTO ESTADOS_EXAMENES (ESTADO_EXAMEN) VALUES 
    ('APROBADO'), 
    ('DESAPROBADO'), 
    ('AUSENTE'),
    ('RECURSA');

-- ESTADO_CIVIL
INSERT INTO ESTADO_CIVIL (ESTADO_CIVIL) VALUES 
    ('CASADO'), 
    ('SOLTERO'), 
    ('SEPARADO'), 
    ('DIVORCIADO'), 
    ('VIUDO'),
    ('UNION CIVIL');

-- CARRERAS
INSERT INTO CARRERAS (CARRERA, ANIO_PLAN) VALUES 
    ('TECNICATURA UNIVERSITARIA EN PROGRAMACION', 2022), 
    ('TECNICATURA UNIVERSITARIA EN ROBOTICA', 2022), 
    ('INGENIERIA EN SISTEMAS', 2023),
    ('TECNICATURA UNIVERSITARIA EN MECATRONICA', 2022),
    ('TECNICATURA EN GESTION AMBIENTAL', 2023),
    ('LICENCIATURA EN DISENO MULTIMEDIA', 2024);

--GENEROS
INSERT INTO GENEROS VALUES('FEMENINO'), 
							('MASCULINO')

-- TIPOS_MATERIAS
INSERT INTO TIPOS_MATERIAS (TIPO_MATERIA) 
					VALUES ('CUATRIMESTRAL'), 
							('ANUAL')

-- MATERIAS
INSERT INTO MATERIAS (MATERIA, TIPO_MATERIA) VALUES 
    ('PROGRAMACION I', 1), 
    ('PROGRAMACION II', 1), 
    ('ALGEBRA', 1), 
    ('FISICA', 2), 
    ('ROBOTICA', 2), 
    ('ELECTRONICA', 1),
    ('BASE DE DATOS I', 1),
    ('INGLES I', 1),
    ('INGLES II', 1),
    ('INGLES ACADEMICO', 2),
    ('SISTEMAS OPERATIVOS', 1),
    ('MATEMATICA DISCRETA', 1),
    ('DISENO GRAFICO', 2),
    ('ANALISIS DE CIRCUITOS', 2);


-- TURNOS
INSERT INTO TURNOS (TURNO) 
			VALUES ('MANANA'), 
					('TARDE'), 
					('NOCHE');

-- CURSOS
INSERT INTO CURSOS (CURSO, TURNO) 
			VALUES ('1W1', 1), 
					('1W2', 2), 
					('1W3', 3), 
					('1W4', 1);

-- ALUMNOS
INSERT INTO ALUMNOS (LEGAJO, NOMBRE, APELLIDO, TIPO_DOC, NRO_DOC, DIRECCION, LOCALIDAD, ESTADO_CIVIL, ESTADO_HABIT, SITUAC_LAB, FECHA_NAC, GENERO, FECHA_ALTA) VALUES 
    (1001, 'Juan', 'Perez', 1, 12345678, 'Av. Siempre Viva 742', 1, 1, 2, 3, '01-01-2000', 1, '01-01-2024'),
    (1002, 'Maria', 'Gomez', 2, 87654321, 'Calle Falsa 123', 2, 2, 1, 2, '15-05-1999', 1, '01-03-2024'),
    (1003, 'Pedro', 'Lopez', 1, 11223344, 'Av. Libertador 1000', 3, 3, 3, 1, '30-11-1998', 2, '01-01-2024'),
    (1004, 'Martin', 'Gilli', 1, 330495653, 'Dean Funes 1323', 3, 3, 3, 1, '04-02-1996', 2, '01-02-2023'),
    (1005, 'Gisella', 'Fiore', 1, 11223344, 'Av. Libertador 1000', 3, 3, 3, 2, '30-08-2000', 1, '02-01-2022'),
    (1006, 'Lucas', 'Martinez', 1, 44556677, 'Calle Alberdi 500', 2, 2, 3, 1, '15-12-1995', 2, '01-06-2024');

-- DOCENTES
INSERT INTO DOCENTES (LEGAJO, NOMBRE, APELLIDO, TIPO_DOC, NRO_DOC, DIRECCION, LOCALIDAD, ESTADO_CIVIL, ESTADO_HABIT, SITUAC_LAB, FECHA_NAC, TITULO_UNIVERSITARIO, GENERO, FECHA_ALTA) VALUES 
    (2001, 'Carlos', 'Mendez', 1, 55667788, 'Av. Belgrano 345', 1, 2, 2, 1, '20-06-1980', 'MSc en Ciencias de la Computacion', 2, '01-01-1992'),
    (2002, 'Ana', 'Fernandez', 2, 66778899, 'Calle San Martin 456', 2, 1, 1, 1, '10-09-1985', 'PhD en Ingenieria', 1, '01-06-1991'),
    (2003, 'Luis', 'Garcia', 1, 99887766, 'Calle Rivadavia 789', 3, 3, 3, 2, '14-02-1975', 'Ingeniero Electronico', 2, '01-03-1995'),
    (2004, 'Fiamma', 'Ghiofi', 1, 23458384, 'la Rioja 124 PB1', 3, 3, 3, 2, '14-02-1975', 'Ingeniera en Sistemas', 1, '01-08-1989'),
    (2005, 'Marcela', 'Giovanni', 1, 24663935, 'San Jeronimo 123', 3, 3, 3, 2, '14-02-1975', 'Licenciado en Arquitectura', 1, '01-08-1992'),
    (2006, 'Emiliano', 'Fuentes', 1, 33445566, 'Calle Corrientes 150', 1, 3, 2, 3, '22-03-1979', 'Licenciado en Matematicas', 2, '01-07-1993');

-- CONTACTOS
INSERT INTO CONTACTOS VALUES
    (1, 1001, NULL, '3513566445'),
    (4, 1001, NULL, 'juanperez@gmail.com'),
    (1, 1002,NULL, '35176764'),
    (4, 1002,NULL, 'gomezmary@hotmail.com'),
    (2, 1003,NULL, '351834534'),
    (5, 1003, NULL, 'lopez_pedro@banco-nacion.com'),
    (1,NULL, 2001, '3423464564'),
    (4,NULL, 2001, 'carlosmen@gmail.com'),
    (1,NULL, 2002, '39422344555'),
    (4,NULL, 2002, 'anafernandez@gmail.com'),
    (1,NULL, 2003, '35166322332'),
    (4,NULL, 2003, 'luispgarcia@hotmail.com'),
    (1,NULL, 2004, '35166322332'),
    (4,NULL, 2004, 'ghiofi-fiamma@hotmail.com'),
    (1,NULL, 2005, '345229955'),
    (4,NULL, 2005, 'giovannimarceal@hotmail.com'),
    (1, 1004,NULL, '3452245566'),
    (4, 1004,NULL, 'mgilli@hotmail.com'),
    (1, 1005,NULL, '3564330304'),
    (4, 1005,NULL, 'fioregise@hotmail.com'),
    (1,NULL, 2006, '351223456'),
    (4,NULL, 2006, 'emifuen@hotmail.com');

-- MATERIASXCARRERAS
INSERT INTO MATERIASXCARRERAS (CARRERA, MATERIA, DOCENTE_A_CARGO) VALUES 
    (1, 1, 2001), 
    (1, 2, 2002), 
    (2, 3, 2003),
    (3, 4, 2004),
    (3, 5, 2005),
    (1, 6, 2001),
    (4, 7, 2006);


-- INSCRIPCION_A_CARRERAS
INSERT INTO INSCRIPCION_A_CARRERAS (FECHA, ALUMNO, CARRERA) VALUES 
('01-02-2024', 1001, 1), 
('15-03-2024', 1002, 2),
('10-04-2024', 1003, 2),
('01-03-2022', 1005, 3);



-- INSCRIPCION_A_CURSADO
INSERT INTO INSCRIPCION_A_CURSADO (FECHA, ALUMNO, INSCRIP_CARRER) VALUES 
('01-04-2024', 1001, 1), 
('01-05-2024', 1002, 2),
('01-04-2022', 1003, 3),
('01-03-2022', 1005, 4);


-- TIPOS EX MENES
INSERT INTO TIPOS_EXAMEN (TIPO_EXAMEN) VALUES 
    ('PARCIAL'), 
    ('FINAL'), 
    ('RECUPERATORIO'),
    ('INTEGRADOR');

INSERT INTO MATERIAS_X_CURSADO VALUES(1,1),
									(2,1),
									(3,1),
									(4,2),
									(5,2),
									(6,2),
									(2,3),
									(3,3),
									(4,4),
									(7,4),
									(7,3),
									(3,4)


-- CURSADAS
INSERT INTO CURSADAS 
				VALUES ('01-06-2024', 1, 1, 1), 
						('01-07-2024', 2, 1, 1),
						 ('12-08-2022', 3, 4, 2), 
						('15-09-2021', 4, 3, 3),
						 ('30-08-2023', 6, 2, 4), 
						('02-10-2024', 8, 4, 2);
					

-- INSCRIPCION_EXAMENES_FINAL

INSERT INTO INSCRIPCION_EXAMENES_FINAL (FECHA, HORA, CURSADA, CODIGO) 
						VALUES ('01-08-2024', '09:00', 1, 'WDWE4332'), 
								('15-08-2024', '14:00', 2, 'WER23423');

-- TRIBUNALES
INSERT INTO TRIBUNALES (MATERIA, FECHA, AULA) 
				VALUES (1, '20-10-2024','AULA 990'), 
						(2, '20-11-2024', 'AULA 230');



--DOCENTES_X_TRIBUNALES
INSERT INTO DOCENTES_X_TRIBUNALES VALUES(2001, 1),
										(2002, 2),
										(2003, 2),
										(2004, 1);

------ 
INSERT INTO EXAMENES VALUES(2, 1, 1, NULL,NULL),
							(6, 2, 1, NULL, NULL),
							(4, 2, 1, NULL, NULL),
							(8, 1, 1, NULL, NULL),
							(9, 1, 1, NULL,NULL),
							(7, 1, 1, NULL, NULL),
							(5, 2, 1, NULL, NULL),
							(6, 1, 2, 1,1),
							(9, 1, 2, 1, 2),
							(5, 2, 2, 2,1),
							(2, 2, 2, 2, 2)

--EXAMENES_X_CURSADA
INSERT INTO EXAMENES_X_CURSADA VALUES(1,3),
									(2,4),
									(3,5),
									(4,6),
									(5,7),
									(6,1),
									(3,2);

-------------------------------------------------------------------- CONSULTAS ENTREGA 2 --------------------------------------------------------------------

-- Alumnos inscritos en la cursada del a o en curso
SELECT A.LEGAJO, A.NOMBRE, A.APELLIDO, 'Inscripto en cursada' AS ESTADO
FROM ALUMNOS A
JOIN INSCRIPCION_A_CURSADO IC ON A.LEGAJO = IC.ALUMNO
JOIN MATERIAS_X_CURSADO MC ON IC.ID = MC.INSCRIP_CURSADO
WHERE YEAR(IC.FECHA) = YEAR(GETDATE())

UNION

-- Alumnos inscritos en la carrera pero no cursando este a o
SELECT A.LEGAJO, A.NOMBRE, A.APELLIDO, 'Inscripto en carrera, no cursando' AS ESTADO
FROM ALUMNOS A
JOIN INSCRIPCION_A_CARRERAS IC ON A.LEGAJO = IC.ALUMNO
WHERE A.LEGAJO NOT IN (
    SELECT A2.LEGAJO
    FROM ALUMNOS A2
    JOIN INSCRIPCION_A_CURSADO IC2 ON A2.LEGAJO = IC2.ALUMNO
    JOIN MATERIAS_X_CURSADO MC2 ON IC2.ID = MC2.INSCRIP_CURSADO
    WHERE YEAR(IC2.FECHA) = YEAR(GETDATE())
);

/*
Esta consulta obtiene informaci√≥n sobre las materias y los alumnos inscritos en ellas. 
Se incluyen los siguientes detalles:

- MATERIA: Nombre de la materia.
- NUMERO_ALUMNOS: Cantidad de alumnos distintos inscritos en la materia.
- EXAMENES_REALIZADOS: N√∫mero total de ex√°menes realizados por los alumnos en esa materia.
- TOTAL_NOTAS: Suma total de las notas obtenidas en los ex√°menes.
- NOTA_PROMEDIO: Promedio de las notas obtenidas por los alumnos en la materia.
- NOTA_MAXIMA: Nota m√°s alta obtenida en la materia.
- NOTA_MINIMA: Nota m√°s baja obtenida en la materia.
- TOTAL_MATERIAS_CURSADAS: N√∫mero total de materias cursadas por los alumnos, 
  obtenido a trav√©s de una vista (VW_TOTAL_MATERIAS_CURSADAS) que relaciona 
  las inscripciones de los alumnos con las materias.

La consulta filtra los alumnos nacidos entre 1990 y 2000 y s√≥lo muestra  la nota promedio 
es mayor a 6. 
*/

--CREAMOS LA VISTA Y DESPUES EJECUTAMOS EL SELECT EJECUTANDO ESA VIEW

--CREATE VIEW VW_TOTAL_MATERIAS_CURSADAS 
--AS
--SELECT 
--    IC.ALUMNO,
--    COUNT(DISTINCT MC.MATERIAXCARRERA) AS TOTAL_MATERIAS_CURSADAS
--FROM INSCRIPCION_A_CURSADO IC
--JOIN MATERIAS_X_CURSADO MC ON IC.ID = MC.INSCRIP_CURSADO
--GROUP BY IC.ALUMNO;

SELECT 
    M.MATERIA,
    COUNT(DISTINCT IC.ALUMNO) AS NUMERO_ALUMNOS,
    COUNT(E.ID) AS EXAMENES_REALIZADOS,
    SUM(E.NOTA) AS TOTAL_NOTAS,
    AVG(E.NOTA) AS NOTA_PROMEDIO,
    MAX(E.NOTA) AS NOTA_MAXIMA,
    MIN(E.NOTA) AS NOTA_MINIMA,
    VTC.TOTAL_MATERIAS_CURSADAS
FROM MATERIAS M
JOIN MATERIASXCARRERAS MXC ON M.ID = MXC.MATERIA
JOIN MATERIAS_X_CURSADO MC ON MC.MATERIAXCARRERA = MXC.ID
JOIN INSCRIPCION_A_CURSADO IC ON MC.INSCRIP_CURSADO = IC.ID
JOIN EXAMENES_X_CURSADA EXC ON IC.ID = EXC.CURSADA
JOIN EXAMENES E ON EXC.EXAMEN = E.ID
JOIN ALUMNOS AL ON AL.LEGAJO = IC.ALUMNO
JOIN VW_TOTAL_MATERIAS_CURSADAS VTC ON VTC.ALUMNO = IC.ALUMNO
WHERE YEAR(AL.FECHA_NAC) BETWEEN 1990 AND 2000
GROUP BY M.MATERIA, VTC.TOTAL_MATERIAS_CURSADAS
HAVING  AVG(E.NOTA) >=6;

--------------------------------------------
--informaci√≥n detallada sobre los alumnos activos, incluyendo sus datos personales, el curso en el que est√°n inscriptos, las materias que cursan y su estado en los ex√°menes.
SELECT 
    A.LEGAJO,
    A.NOMBRE,
    A.APELLIDO,
    C.CURSO,
    M.MATERIA,
    CASE 
        WHEN E.NOTA IS NULL THEN 'Sin Calificaci√≥n'
        WHEN E.NOTA >= 6 THEN 'Aprobado'
        ELSE 'Reprobado'
    END AS ESTADO_EXAMEN,
    S.SITUACION_LAB AS SITUACION_LABORAL,
    EC.ESTADO_CIVIL AS ESTADO_CIVIL,
    EH.ESTADO_HABITACIONAL AS ESTADO_HABITACIONAL,
    CUR.FECHA AS FECHA_CURSADA,
    A.FECHA_BAJA AS FECHA_BAJA
FROM 
    ALUMNOS A
JOIN 
    INSCRIPCION_A_CARRERAS IC ON A.LEGAJO = IC.ALUMNO
JOIN 
    CURSOS C ON IC.CARRERA = C.ID
JOIN 
    MATERIAS_X_CURSADO MC ON MC.INSCRIP_CURSADO = IC.ID
JOIN 
    MATERIAS M ON MC.MATERIAXCARRERA = M.ID
JOIN 
    CURSADAS CUR ON CUR.ID = MC.INSCRIP_CURSADO
LEFT JOIN 
    INSCRIPCION_A_CURSADO IAC ON IAC.ALUMNO = A.LEGAJO 
LEFT JOIN 
    INSCRIPCION_EXAMENES_FINAL EIF ON EIF.CURSADA = CUR.ID  
LEFT JOIN 
    EXAMENES E ON E.INSCRIP_FINAL = EIF.ID 
JOIN 
    SITUACION_LABORAL S ON A.SITUAC_LAB = S.ID
JOIN 
    ESTADO_CIVIL EC ON A.ESTADO_CIVIL = EC.ID
JOIN 
    ESTADO_HABITACIONAL EH ON A.ESTADO_HABIT = EH.ID
WHERE 
    A.FECHA_BAJA IS NULL
ORDER BY 
    A.APELLIDO, A.NOMBRE;

---------------------------------------------------------------------------------
-- Consulta para obtener el nombre de los alumnos cuya carrera comience con tecnicatura y traer tambien el promedio de notas de TODOS los examenes rendidos.

SELECT
	AL.NOMBRE + SPACE(1) + AL.APELLIDO AS ALUMNO, 
	C.CARRERA AS CARRERA,
	(SELECT AVG(EX.NOTA) FROM EXAMENES EX) AS NOTA,
	'PROMEDIO NOTAS' Observacion
FROM
    ALUMNOS AL
	INNER JOIN INSCRIPCION_A_CARRERAS IC ON AL.LEGAJO = IC.ALUMNO
	INNER JOIN CARRERAS C ON IC.CARRERA = C.ID
WHERE
	C.CARRERA LIKE 'TECNICATURA%'
GROUP BY AL.NOMBRE, AL.APELLIDO, C.CARRERA

UNION

--Mostrar alumnos que rindieron un examen, Y MOSTRAR SU CORRESPONDIENTE NOTA.
SELECT
    AL.NOMBRE + SPACE(1) + AL.APELLIDO AS ALUMNO, CARR.CARRERA AS CARRERA, E.NOTA AS NOTA, 'HA RENDIDO EXAMENES' Observacion
FROM
    ALUMNOS AL
	INNER JOIN INSCRIPCION_A_CARRERAS IAC ON IAC.ALUMNO = AL.LEGAJO
	INNER JOIN CARRERAS CARR ON CARR.ID = IAC.CARRERA
	INNER JOIN INSCRIPCION_A_CURSADO IC ON IC.ALUMNO = AL.LEGAJO
	INNER JOIN MATERIAS_X_CURSADO MXC ON MXC.INSCRIP_CURSADO = IC.ID
	INNER JOIN CURSADAS C ON C.MATERIA_CURSADA = MXC.ID
	INNER JOIN EXAMENES_X_CURSADA EXC ON C.ID = EXC.CURSADA
	INNER JOIN EXAMENES E ON EXC.EXAMEN = E.ID
WHERE
    AL.LEGAJO IN (SELECT IAC.ALUMNO 
						FROM INSCRIPCION_A_CURSADO IAC
							WHERE E.NOTA¬†IS¬†NOT¬†NULL);
----------------------------------------------------------------
--informaci√≥n sobre docentes, las materias que dictan y el n√∫mero total de alumnos inscriptos en esas materias.
SELECT 
    D.NOMBRE AS NOMBRE_DOCENTE,
    D.APELLIDO AS APELLIDO_DOCENTE,
    M.MATERIA AS NOMBRE_MATERIA,
    COUNT(DISTINCT IAC.ALUMNO) AS TOTAL_ALUMNOS
FROM 
    DOCENTES D
JOIN 
    DOCENTES_X_TRIBUNALES DT ON D.LEGAJO = DT.DOCENTE
JOIN 
    TRIBUNALES T ON DT.TRIBUNAL = T.ID
JOIN 
    MATERIASXCARRERAS MC ON T.MATERIA = MC.ID
JOIN 
    MATERIAS M ON MC.MATERIA = M.ID
LEFT JOIN 
    MATERIAS_X_CURSADO MCX ON MC.ID = MCX.MATERIAXCARRERA
LEFT JOIN 
    INSCRIPCION_A_CURSADO IAC ON MCX.INSCRIP_CURSADO = IAC.ID
LEFT JOIN 
    INSCRIPCION_A_CARRERAS IC ON IAC.ALUMNO = IC.ID  
LEFT JOIN 
    INSCRIPCION_EXAMENES_FINAL EIF ON IC.ID = EIF.ID  
LEFT JOIN 
    EXAMENES E ON E.INSCRIP_FINAL = EIF.ID 

WHERE 
    D.FECHA_BAJA IS NULL  
GROUP BY 
    D.NOMBRE, D.APELLIDO, M.MATERIA
HAVING 
    COUNT( IAC.ALUMNO) > 0
ORDER BY 
    D.APELLIDO, D.NOMBRE, M.MATERIA;


-------------------------------------
--SET DATEFORMAT dmy
--SELECT * FROM ALUMNOS

INSERT INTO ALUMNOS (LEGAJO, NOMBRE, APELLIDO, TIPO_DOC, NRO_DOC, DIRECCION, LOCALIDAD, ESTADO_CIVIL, ESTADO_HABIT, SITUAC_LAB, FECHA_NAC, GENERO, FECHA_ALTA) VALUES 

    ----------------------------------------------------------------------------------------------------------------------N.I
     (1007,'David', 'Davila', 1, 42589256, 'Calle Falsa 123', 2, 2, 3, 1, '05-11-2002', 2, '01-06-2024'),
     (1008, 'Agustina', 'Martinez', 1, 43589867, 'Dean Funes 1323', 3, 3, 3, 1, '04-05-2001', 1, '01-02-2023'),
     (1009, 'Matias', 'Suarez', 1, 44978123, 'Calle Alberdi 500', 2, 2, 3, 1, '11-10-1999', 2, '01-06-2024'),
     (1010, 'Abigail', 'Solari', 1, 43658987, 'Av. Libertador 1000', 3, 3, 3, 2, '15-08-2000', 1, '02-01-2022');


INSERT INTO INSCRIPCION_A_CARRERAS (FECHA, ALUMNO, CARRERA) VALUES 

------------------------------------------------------------------------------
('01-02-2024', 1007, 1),
('01-03-2024', 1008, 1),
('01-03-2024', 1009, 1),
('01-03-2024', 1010, 1);

INSERT INTO INSCRIPCION_A_CARRERAS (FECHA, ALUMNO, CARRERA) VALUES 
('01-03-2024', 1002, 1),
('01-03-2024', 1003, 1),
('01-03-2024', 1004, 1),
('01-03-2024', 1005, 1),
('01-03-2024', 1006, 1);

--SELECT * FROM INSCRIPCION_A_CARRERAS

INSERT INTO INSCRIPCION_A_CURSADO (FECHA, ALUMNO, INSCRIP_CARRER) VALUES 

--------------------------------------------------------
('01-10-2024', 1007, 5), 
('03-10-2024', 1008, 6),
('05-11-2022', 1009, 7),
('10-11-2022', 1010, 8);

--SELECT * FROM INSCRIPCION_A_CURSADO
--------------------------
INSERT INTO MATERIASXCARRERAS (CARRERA, MATERIA, DOCENTE_A_CARGO)
VALUES (1, 2, 2001),
	   (1, 3, 2001),
	   (1, 7, 2001);

select * from MATERIASXCARRERAS
-------------------------------
--SELECT * FROM MATERIASXCARRERAS
----1,6,8,9,10
SELECT * FROM MATERIAS_X_CURSADO
--SELECT * FROM INSCRIPCION_A_CURSADO
--5,6,7,8
INSERT INTO MATERIAS_X_CURSADO (MATERIAXCARRERA, INSCRIP_CURSADO)
VALUES (1, 5),
	   (1, 6),
	   (1, 7),
	   (1, 8),
	   (6, 5),
	   (6, 6),
	   (6, 7),
	   (6, 8),
	   (8, 5),
	   (8, 6),
	   (8, 7),
	   (8, 8),
	   (9, 5),
	   (9, 6),
	   (9, 7),
	   (9, 8),
	   (10, 5),
	   (10, 6),
	   (10, 7),
	   (10, 8);

-------------------------

select * from CURSADAS
--SELECT * FROM MATERIAS_X_CURSADO
--SELECT * FROM ESTADOS_MATERIAS
--SELECT * FROM CURSOS

SET DATEFORMAT YMD
--13-32
INSERT INTO CURSADAS (FECHA, MATERIA_CURSADA, ESTADO_MATERIA, CURSO)
VALUES ('2024-07-28', 13, 1, 1),
('2024-06-21', 14, 1, 1),
('2024-03-22', 15, 3, 2),
('2024-06-29', 16, 3, 2),
('2024-02-24', 17, 1, 3),
('2024-02-19', 18, 1, 3),
('2024-02-25', 19, 2, 1),
('2024-01-12', 20, 2, 1),
('2024-04-14', 21, 1, 2),
('2024-02-12', 22, 1, 2),
('2024-06-11', 23, 3, 1),
('2024-01-21', 24, 3, 1),
('2024-03-11', 25, 2, 1),
('2024-02-27', 26, 1, 3),
('2024-04-09', 27, 1, 3),
('2024-06-21', 28, 1, 1),
('2024-01-14', 29, 2, 2),
('2024-06-21', 30, 1, 2),
('2024-04-24', 31, 1, 2),
('2024-03-27', 32, 3, 3);


--------------------------------

----7-26
--select * from CURSADAS
--select * from EXAMENES
--SELECT * FROM EXAMENES_X_CURSADA
SELECT * FROM TRIBUNALES
--SELECT * FROM MATERIAS
--SELECT * FROM MATERIASXCARRERAS
--1,6,8,9,10

INSERT INTO TRIBUNALES (MATERIA, FECHA, AULA)
VALUES (6, '2024-10-01', 'AULA 876'),
		(8, '2024-12-11', 'AULA 237'),
		(9, '2024-12-11', 'AULA 250'),
		(10, '2024-12-11', 'AULA 337');

INSERT INTO DOCENTES_X_TRIBUNALES (DOCENTE, TRIBUNAL)
VALUES (2001, 1),
		(2001, 3),
		(2001, 5),
		(2001, 6),
		(2001, 4);

insert into EXAMENES (NOTA, ESTADO_EXAMEN, TIPO_EXAMEN, INSCRIP_FINAL, TRIBUNAL)
VALUES (2, 2, 1, NULL, 1),
	   (2, 2, 1, NULL, 3),
	   (2, 2, 1, NULL, 3),
	   (2, 2, 1, NULL, 4),
	   (2, 2, 1, NULL, 1),
	   (6, 1, 1, NULL, 5),
	   (7, 1, 1, NULL, 6),
	   (7, 1, 1, NULL, 6),
	   (6, 1, 1, NULL, 4),
	   (6, 1, 1, NULL, 1),
	   (7, 1, 1, NULL, 3),
	   (6, 1, 1, NULL, 4),
	   (6, 1, 1, NULL, 6),
	   (6, 1, 1, NULL, 5),
	   (6, 1, 1, NULL, 1),
	   (7, 1, 1, NULL, 4),
	   (8, 1, 1, NULL, 1),
	   (9, 1, 1, NULL, 3),
	   (10, 1, 1, NULL, 3),
	   (8, 1, 1, NULL, 1);

--select * from CURSADAS
----7-26
--select * from EXAMENES
----12-31
--SELECT * FROM EXAMENES_X_CURSADA

INSERT INTO EXAMENES_X_CURSADA (CURSADA, EXAMEN)
VALUES (7, 12),
(8, 13),
(9, 14),
(10, 15),
(11, 16),
(12, 17),
(13, 18),
(14, 19),
(15, 20),
(16, 21),
(17, 22),
(18, 23),
(19, 24),
(20, 25),
(21, 26),
(22, 27),
(23, 28),
(24, 29),
(25, 30),
(26, 31);
-----------------------------------------------------------------
SELECT a.APELLIDO + SPACE(1) + a.NOMBRE 'ALUMNO', m.MATERIA 'NOMBRE MATERIA', mx.DOCENTE_A_CARGO 'DOCENTE', e.NOTA 'NOTA'
FROM ALUMNOS a
INNER JOIN INSCRIPCION_A_CURSADO iac ON iac.ALUMNO = a.LEGAJO
INNER JOIN MATERIAS_X_CURSADO mxc ON mxc.INSCRIP_CURSADO = iac.ID
INNER JOIN CURSADAS C on C.MATERIA_CURSADA = MXC.ID
INNER JOIN EXAMENES_X_CURSADA ex ON ex.CURSADA = c.ID
INNER JOIN EXAMENES e ON ex.EXAMEN = e.ID
INNER JOIN MATERIASXCARRERAS mx ON mx.ID = mxc.MATERIAXCARRERA
INNER JOIN MATERIAS m ON m.ID = mx.MATERIA
WHERE mx.DOCENTE_A_CARGO = 2001
ORDER BY [NOMBRE MATERIA];
-----------------------------------------------------------------
SELECT d.LEGAJO 'LEGAJO', d.NOMBRE 'NOMBRE DOCENTE', m.MATERIA 'MATERIA A CARGO'
FROM DOCENTES d
INNER JOIN DOCENTES_X_TRIBUNALES dxt ON dxt.DOCENTE = d.LEGAJO
INNER JOIN TRIBUNALES t on t.ID = dxt.TRIBUNAL
INNER JOIN MATERIASXCARRERAS mxc ON mxc.ID = t.MATERIA
INNER JOIN MATERIAS m on m.ID = mxc.MATERIA
WHERE d.LEGAJO = 2001;


SELECT 
    DATEPART(YEAR, GETDATE()) - DATEPART(YEAR, a.FECHA_NAC) AS Edad,
    a.LEGAJO AS LegajoAlumno,
    a.NOMBRE AS NombreAlumno,
    COUNT(CASE WHEN em.ESTADO_MATERIA = 'REGULAR' THEN 1 END) AS MateriasRegulares,
    COUNT(CASE WHEN em.ESTADO_MATERIA = 'PROMOCIONAL' THEN 1 END) AS MateriasPromocionales,
    COUNT(CASE WHEN em.ESTADO_MATERIA = 'LIBRE' THEN 1 END) AS MateriasLibres,
    COUNT(CASE WHEN e.NOTA >= 4 THEN 1 END) AS MateriasAprobadas
FROM 
    ALUMNOS a
JOIN ESTADO_CIVIL ec ON a.ESTADO_CIVIL = ec.ID
JOIN ESTADO_HABITACIONAL eh ON a.ESTADO_HABIT = eh.ID
JOIN SITUACION_LABORAL sl ON a.SITUAC_LAB = sl.ID
JOIN INSCRIPCION_A_CURSADO IAC ON a.LEGAJO = iac.ALUMNO
join MATERIAS_X_CURSADO MATXCUR ON IAC.ID = MATXCUR.INSCRIP_CURSADO
JOIN CURSADAS cu ON MATXCUR.ID = CU.MATERIA_CURSADA
JOIN ESTADOS_MATERIAS em on cu.ESTADO_MATERIA = em.ID
JOIN EXAMENES_X_CURSADA EXC ON CU.ID = EXC.CURSADA
JOIN EXAMENES e ON EXC.EXAMEN = E.ID
 
GROUP BY 
    DATEPART(YEAR, GETDATE()) - DATEPART(YEAR, a.FECHA_NAC),
    a.LEGAJO, a.NOMBRE;

SELECT COUNT(a.LEGAJO)
FROM ALUMNOS a
INNER JOIN INSCRIPCION_A_CURSADO iac on iac.ALUMNO = a.LEGAJO
INNER JOIN MATERIAS_X_CURSADO MC ON MC.INSCRIP_CURSADO = IAC.ID
INNER JOIN MATERIASXCARRERAS MXC ON MXC.ID = MC.MATERIAXCARRERA
INNER JOIN DOCENTES d ON d.LEGAJO = mxc.DOCENTE_A_CARGO
INNER JOIN CURSADAS C ON C.MATERIA_CURSADA = MC.ID
inner join EXAMENES_X_CURSADA exc ON exc.CURSADA = c.ID
inner join EXAMENES e ON e.ID = exc.EXAMEN
WHERE e.NOTA < 6
AND d.LEGAJO = 2001


--WHERE IAC.ID = 5
--AND mxc.ID = 2;